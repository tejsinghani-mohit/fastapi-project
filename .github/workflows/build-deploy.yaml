name: Build and Deploy code

# on:
#   push:
#     branches: ["main"]

#Runs on all branches
on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install Python v3.12.7
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.7'
      - name: Upgrade PIP
        run: python -m pip install --upgrade pip
      - name: Install Requirements
        run: pip install -r requirements.txt
      - name: Test with Pytest
        run: pytest
      # - name: ping ubuntu vm
      #   run: ping 192.168.0.185  

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:1.0.0
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:  
      - name: Check out repository code
        uses: actions/checkout@v4
  #     - name: deploy to ubuntu server
  #       uses: appleboy/ssh-action@v1.2.0
  #       with:
  #         host: ${{secrets.PROD_HOST}}
  #         username: ${{secrets.PROD_USERNAME}}
  #         password: ${{secrets.PROD_PASSWORD}}
  #         script: |
  #           cd app/src
  #           git pull
  #           echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart fastapi  

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          key: ${{ secrets.KEY }}
          port: 22
          script: whoami



